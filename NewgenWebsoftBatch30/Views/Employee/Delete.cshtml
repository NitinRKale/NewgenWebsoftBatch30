@model NewgenWebsoftBatch30.Models.Employee

@{
    ViewData["Title"] = "Delete";
}


<h3>Delete Employee</h3>
<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EmpFirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EmpFirstName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EmpLastName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EmpLastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EmailId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EmailId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BirthDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BirthDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EmpGender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EmpGender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EmpPhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EmpPhoneNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Salary)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Salary)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EmpStatus)
        </dt>
        <dd class="col-sm-10">
            @if (Model.EmpStatus == true)
            {
                @Html.DisplayName("Active")
            }
            else
            {
                @Html.DisplayName("Inactive")
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Department)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Department.DeptName)
        </dd>
    </dl>

    @* <form asp-action="Delete"> *@
    <form>
        <input type="hidden" asp-for="EmpId" />
        @Html.AntiForgeryToken()
        <input type="submit" id="btnDelete" value="Delete" class="btn btn-danger" />
        <a asp-action="Index" class="btn btn-info">Back to List</a>
    </form>
</div>


@section Scripts {

    <script src="~/js/employeecontroller.js"></script>


@*     <script>
        $(document).ready(function () {
            $('#btnDelete').click(function (e) {
                e.preventDefault();

                 Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to delete this employee?",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Delete',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        //this.submit(); // Submit the form if confirmed
                        debugger;
                        var employeeId = $('#EmpId').val();
                         // Get anti-forgery token
                        var token = $('input[name="__RequestVerificationToken"]').val();
                        $.ajax({
                            //url: '/Employee/DeleteConfirm', // Use your AJAX endpoint
                            url: '@Url.Action("DeleteConfirm", "Employee")', // Use your AJAX endpoint
                            type: 'POST',
                            headers: { 'RequestVerificationToken': token },
                            data: { empId: employeeId},
                            success: function (result) {
                                debugger;
                                if (result.success == "True") {
                                    Swal.fire({
                                                 title: 'Deleted',
                                                 type:'success',
                                                 icon: 'success',
                                                 text: result.message,
                                                 button:'Close'
                                      }).then(function () {
                                        window.location.href = result.redirectTo;
                                       });
                                 } else {
                                     Swal.fire({
                                         icon: 'error',
                                         title: 'Oops..',
                                         text:  'Failed to Update employee. Please check your input.'
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops..',
                                    text:  'Failed to Update employee. Please check your input.'
                                 });
                             }
                        });
                    }
                });
            });
        });
    </script> *@

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
